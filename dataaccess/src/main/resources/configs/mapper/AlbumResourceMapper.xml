<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sheepfly.media.dataaccess.mapper.AlbumResourceMapper">

  <resultMap id="BaseResultMap" type="com.sheepfly.media.dataaccess.entity.AlbumResource">
    <id property="id" column="ID" jdbcType="VARCHAR"/>
    <result property="albumId" column="ALBUM_ID" jdbcType="VARCHAR"/>
    <result property="resourceId" column="RESOURCE_ID" jdbcType="VARCHAR"/>
    <result property="deleteStatus" column="DELETE_STATUS" jdbcType="TINYINT"/>
    <result property="createTime" column="CREATE_TIME" jdbcType="TIMESTAMP"/>
    <result property="updateTime" column="UPDATE_TIME" jdbcType="TIMESTAMP"/>
    <result property="deleteTime" column="DELETE_TIME" jdbcType="TIMESTAMP"/>
  </resultMap>

  <sql id="Base_Column_List">
    ID,ALBUM_ID,RESOURCE_ID,
        DELETE_STATUS,CREATE_TIME,UPDATE_TIME,
        DELETE_TIME
  </sql>

  <delete id="batchDeleteAlbum" parameterType="TableRequest">
    update media.ALBUM_RESOURCE t
    set DELETE_STATUS = 1, UPDATE_TIME = current_timestamp()
    where  t.RESOURCE_ID in (
    select res.id
    from media.resource res
    where res.DELETE_STATUS = 1
    <choose>
      <when test="idList neq null and idList.size() gt 0">
        and res.id in
        <foreach collection="idList" item="item" separator="," open="(" close=")">
          #{item}
        </foreach>
      </when>
      <otherwise>
        <include refid="com.sheepfly.media.dataaccess.mapper.ResourceMapper.batch_where_sql">
          <property name="t_resource" value="res"/>
        </include>
      </otherwise>
    </choose>
    )
  </delete>
  <update id="updateResourceFromAlbum" parameterType="string">
    update media.ALBUM_RESOURCE
    set DELETE_STATUS = 1,
      UPDATE_TIME = current_timestamp()
    where RESOURCE_ID = #{resourceId}
      and DELETE_STATUS = 0
  </update>

  <update id="batchUpdateByResource" parameterType="com.sheepfly.media.common.form.data.ResourceData">
    update media.ALBUM_RESOURCE ab set
        DELETE_STATUS = 1
    where DELETE_STATUS = 0
    <include refid="com.sheepfly.media.dataaccess.mapper.ResourceMapper.association_batch_update_where">
      <property name="t_table" value="ab"/>
      <property name="t_column" value="resource_id"/>
    </include>
    and ab.album_id in
    <foreach collection="deletedAlbums" item="item" open="(" close=")" separator=",">
      #{item.id}
    </foreach>
  </update>

  <select id="selectAlbumResourceList" parameterType="TableRequest"
      resultType="com.sheepfly.media.common.vo.AlbumResourceVo">
    select ar.ID,
      ar.ALBUM_ID,
      a.name as album_name,
      ar.RESOURCE_ID,
      res.filename as resource_name,
      dir.path as resource_dir
    from media.ALBUM_RESOURCE ar
           LEFT JOIN MEDIA.RESOURCE res
                     on ar.RESOURCE_ID = res.ID
           left join media.album a
                     on ar.ALBUM_ID = a.ID
           left join media.directory dir
                     on res.dir_code = dir.dir_code
    where ar.DELETE_STATUS = 0
        and res.DELETE_STATUS = 0
    <if test="params.resourceId != null and params.resourceId != ''">and ar.RESOURCE_ID = #{params.resourceId}</if>
    <if test="params.albumName != null and params.albumName != ''">
      and a.name like '%' || #{params.albumName} || '%'
    </if>
    <if test="params.albumId != null and params.albumId != ''">
      and a.id = #{params.albumId}
    </if>
    order by ar.CREATE_TIME desc
  </select>
</mapper>
